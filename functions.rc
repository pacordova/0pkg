# firepkg functions

. /usr/firepkg/make.conf

# robust echo
fn echo { 
    printf '%s\n' $"* 
}

fn MAKE {
    *=($MAKEOPTS PREFIX=$PREFIX path= $*)
    make $* &&
        make install $* DESTDIR=$destdir
}

fn CONFIGURE {
    *=(--prefix=$PREFIX $dirflags $*)
    ./configure $* &&
        MAKE
}

fn CONFIGURE2 {
    *=(--prefix=$PREFIX $dirflags $*)
    mkdir build && cd build
        ../configure $* &&
            MAKE
    cd ..
}

fn AUTORECONF {
    if(test -f autogen.sh)
        ./autogen.sh
    if not
        autoreconf -fi -I m4
    CONFIGURE $*
}

fn CMAKE {
    *=(-DCMAKE_INSTALL_PREFIX=$PREFIX -DCMAKE_BUILD_TYPE=Release $*)
    mkdir build && cd build
    	cmake .. $* && 
	MAKE
    cd ..
}

fn MESON {
    *=(-Dprefix=$PREFIX -Dbuildtype=release $*)
    meson build $* &&
        DESTDIR=$destdir ninja -C build install
}

fn SCONS {
    *=(prefix=$PREFIX DESTDIR=$destdir $*)
    scons -c &&
        scons $* install
}

fn WAF {
    python3 bootstrap.py &&
        python3 waf configure --prefix=$PREFIX &&
        python3 waf &&
        python3 waf install --destdir=$destdir
}

fn QMAKE {
    *=(INSTALL_ROOT=$destdir $*)
    qmake -makefile &&
        MAKE $*
}

fn _install {
    pkgname=`{
        basename $1 .tar.xz | 
        sed 's/[._/-][.0-9-]*[0-9][a-z]\?.*$//g'
    }

    {
        echo '#!/bin/rc' 
        echo 'rm $0'
        tar -C / -xvf $1 |
            sed 's|^|>[2=] rm -d ''/|g;s|$|''|g' |
            sort -r
    } >/usr/firepkg/uninstall/rm-$pkgname.rc
    chmod +x /usr/firepkg/uninstall/rm-$pkgname.rc
}

fn _uninstall {
    /usr/firepkg/uninstall/rm-$1.rc || true
}

fn _download {
    eval `{cat $db | grep '^'$1=} && *=$$1
    >[2=] mkdir -p $srcdir 
    curl -LO $1 &&
        tar -C $srcdir --strip-components=1 -xf `{basename $1} &&
        mv `{basename $1} /usr/firepkg/downloads/$i
    if(test -f /usr/firepkg/patches/$pkgname.diff)
        patch -d $srcdir -p1 </usr/firepkg/patches/$pkgname.diff
    true
}

fn _build {
    cd $srcdir
    eval `{cat $db | grep '^'$1=} && *=$$1
    version=`{ 
        echo $1 |
        grep -oE '[._/-][.0-9-]*[0-9][a-z]?' |
        sed -n 's/^.//g;s/-/./g;$p'
    }
    shift && $*
    _makepkg $destdir
    mv $destdir.tar.xz $destdir-$version-x86_64.tar.xz
}

fn _makepkg {
    # strip debugging, delete unneeded files, etc.
    {
        strip -S $1/usr/lib64/*
        strip -s $1/usr/bin/*
        strip -s $1/bin/*
        rm -r    $1/usr/share/doc
        rm -r    $1/usr/doc
        rm -r    $1/usr/share/info
        find $1 -name '*.pyc' -delete
    } >[2=]

    tar --directory=$1 \
        --sort=name \
        --mtime=@$SOURCE_DATE_EPOCH \
        --transform='s|^\.\/||' \
        --owner=0 \
        --group=0 \
        --numeric-owner \
        --create \
        --file $1.tar \
        --remove-files \
        .
    xz -T0 -f $1.tar
}

fn _chroot {
    >[2=] mkdir $1/proc
    >[2=] mkdir $1/sys
    >[2=] mkdir $1/dev
    mount -t proc -o ro /proc $1/proc
    mount -t sysfs -o ro /sys $1/sys
    mount -o ro,bind /dev $1/dev
    PS1='(chroot)# ' chroot --user=root $1 || exit
}

fn _timesync {
    date=`{
        nc time.nist.gov 13 |
        awk 'NR>1 {print $2 " " $3}'
    }
    date +'%y-%m-%d %H:%M:%S' -u -s $"date &&
        hwclock --systohc
}
