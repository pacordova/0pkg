# firepkg functions

. /usr/firepkg/make.conf

fn MAKE {
    *=($MAKEOPTS PREFIX=$PREFIX path= $*)

    make $* &&
        make install $* DESTDIR=$destdir
}

fn CONFIGURE {
    *=(--prefix=$PREFIX $dirflags $*)

    ./configure $* &&
        MAKE
}

fn CONFIGURE2 {
    *=(--prefix=$PREFIX $dirflags $*)

    mkdir build && cd build
        ../configure $* &&
            MAKE
    cd ..
}

fn AUTORECONF {
    if(test -f autogen.sh)
        ./autogen.sh
    if not
        autoreconf -fi -I m4

    CONFIGURE $*
}

fn CMAKE {
    *=(-DCMAKE_INSTALL_PREFIX=$PREFIX -DCMAKE_BUILD_TYPE=Release $*)

    cmake . -G Ninja -B build $* &&
        DESTDIR=$destdir ninja -C build install
}

fn MESON {
    *=(-Dprefix=$PREFIX -Dbuildtype=release $*)

    meson build $* &&
        DESTDIR=$destdir ninja -C build install
}

fn SCONS {
    *=(prefix=$PREFIX DESTDIR=$destdir $*)

    scons -c &&
        scons $* install
}

fn WAF {
    python3 bootstrap.py &&
        python3 waf configure --prefix=$PREFIX &&
        python3 waf &&
        python3 waf install --destdir=$destdir
}

fn QMAKE {
    *=(INSTALL_ROOT=$destdir $*)

    qmake -makefile &&
        MAKE $*
}

fn _install {
    basename=`{basename $1 .tar.xz}

    _=/usr/firepkg/uninstall/rm-$basename.rc
    
     >$_ echo '#!/bin/rc'
    >>$_ echo '>[2=]' rm -r ''/usr/firepkg/sources/$basename''
    >>$_ echo '>[2=]' rm -r ''/usr/firepkg/packages/$basename''
    >>$_ echo '>[2=]' rm -d ''/usr/firepkg/uninstall/rm-$basename.rc''

    >[1=] tar -C / -xvf $1 |[2]
    sed 's|^x |>[2=] rm -d ''/|g;s|$|''|g' |
    >>$_ sort -r

    chmod +x $_
}

fn _uninstall {
    /usr/firepkg/uninstall/rm-$1.rc ||
        true
}

fn _download {
    diff=/usr/firepkg/patches/$1.diff
    destdir=/usr/firepkg/sources/$1

    rm -r $destdir >[2=]
    mkdir -p $destdir/usr

    eval `{cat $db | grep '^'$1=} &&
        *=$$1 &&
            *=`{grep $1 /usr/firepkg/db/url.db}

    basename=`{basename $2}

    curl -LO $2

    echo $1 $basename |
        sha256sum -c || exit

    tar -C $destdir --strip-components=1 -xf $basename

    if(test -f $diff)
        patch -d $destdir -p1 <$diff

    rm $basename >[2=]

    true
}

fn _build {
    cd /usr/firepkg/sources/$1

    LIBS=()

    dirflags=( \
        --localstatedir=/var \
        --sysconfdir=/etc \
        --libdir=$LIBDIR \
        --bindir=$PREFIX/bin \
        --sbindir=$PREFIX/sbin \
    )

    destdir=/usr/firepkg/packages/$1

    rm -r $destdir >[2=]

    eval `{cat $db | grep '^'$1=} &&
        *=$$1 && shift && $*

    _makepkg $destdir
}

fn _makepkg {
    basename=`{basename $1}
    cd `{dirname $1}

    # cleaning
    >[2=] strip -S $basename/usr/lib64/*
    >[2=] strip -s $basename/usr/bin/*
    >[2=] strip -s $basename/bin/*
    >[2=] rm -r    $basename/usr/share/doc
    >[2=] rm -r    $basename/usr/doc
    >[2=] rm -r    $basename/usr/share/info
    >[2=] find $basename -name '*.pyc' -delete

    # set mtime
    find $basename -exec touch -hd @$SOURCE_DATE_EPOCH '{}' ';'

    tar --sort=name \
        --mtime="@${SOURCE_DATE_EPOCH}" \
        --owner=0 --group=0 --numeric-owner \
        --strip-components=1 \
        -cf $basename.tar $basename

    xz -T0 -f $basename.tar &&
        rm -r $basename
}

fn _chroot {
    mkdir $1/proc >[2=]
    mkdir $1/sys  >[2=]
    mkdir $1/dev  >[2=]
    mount -t proc -o ro /proc $1/proc
    mount -t sysfs -o ro /sys $1/sys
    mount -o ro,bind /dev $1/dev

    PS1='(chroot)# ' chroot --user=root $1 ||
        exit
}

fn _timesync {
    date=`{
        nc time.nist.gov 13 |
        awk 'NR>1 {print $2 " " $3}'
    }

    date +'%y-%m-%d %H:%M:%S' -u -s $"date &&
        hwclock --systohc
}
